$date
	Fri Nov  8 10:01:54 2024
$end
$version
	QuestaSim Version 2023.4_3
$end
$timescale
	100ps
$end

$scope module cpu_tb $end

$scope module uut $end
$var wire 1 ! i_clk $end
$var wire 1 " i_rst $end
$var wire 1 # i_ce $end
$var wire 1 $ i_register_file [7] $end
$var wire 1 % i_register_file [6] $end
$var wire 1 & i_register_file [5] $end
$var wire 1 ' i_register_file [4] $end
$var wire 1 ( i_register_file [3] $end
$var wire 1 ) i_register_file [2] $end
$var wire 1 * i_register_file [1] $end
$var wire 1 + i_register_file [0] $end
$var reg 5 , o_pc_addr [4:0] $end
$var reg 6 - o_program_memory [5:0] $end
$var reg 8 . o_register_file [7:0] $end
$var reg 8 / o_alu [7:0] $end
$var reg 8 0 o_acumulator [7:0] $end
$var reg 3 1 o_operation_code_2_alu [2:0] $end
$var reg 1 2 o_carry $end
$var reg 8 3 o_data_memory [7:0] $end
$var reg 3 4 w_operation_code_2_alu [2:0] $end
$var reg 2 5 w_register_file_addr_2_rf [1:0] $end
$var reg 3 6 w_register_file_ce_2_rf [2:0] $end
$var reg 1 7 w_acumulator_ce $end
$var reg 10 8 w_data_memory_addr [9:0] $end
$var reg 1 9 w_data_memory_write_enable $end
$var reg 1 : w_data_memory_read_enable $end

$scope module pc_progmem_inst $end
$var wire 1 ! i_clk $end
$var wire 1 " i_rst $end
$var wire 1 # i_ce $end
$var reg 5 ; o_pc_addr [4:0] $end
$var reg 6 < o_program_memory [5:0] $end

$scope begin p_program_counter $end
$upscope $end

$scope begin p_program_memory $end
$upscope $end
$upscope $end

$scope module id_inst $end
$var wire 1 = i_instruction [5] $end
$var wire 1 > i_instruction [4] $end
$var wire 1 ? i_instruction [3] $end
$var wire 1 @ i_instruction [2] $end
$var wire 1 A i_instruction [1] $end
$var wire 1 B i_instruction [0] $end
$var reg 3 C o_operation_code [2:0] $end
$var reg 2 D o_register_file_addr [1:0] $end
$var reg 3 E o_register_file_ce [2:0] $end
$var reg 1 F o_acumulator_ce $end
$var reg 10 G o_data_memory_addr [9:0] $end
$var reg 1 H o_memory_write_enable $end
$var reg 1 I o_memory_read_enable $end

$scope begin p_instruction_decoder $end
$upscope $end
$upscope $end

$scope module alu_inst $end
$var wire 1 ! i_clk $end
$var wire 1 " i_rst $end
$var wire 1 J i_acumulator_ce $end
$var wire 1 K i_operation_code [2] $end
$var wire 1 L i_operation_code [1] $end
$var wire 1 M i_operation_code [0] $end
$var wire 1 $ i_register_file [7] $end
$var wire 1 % i_register_file [6] $end
$var wire 1 & i_register_file [5] $end
$var wire 1 ' i_register_file [4] $end
$var wire 1 ( i_register_file [3] $end
$var wire 1 ) i_register_file [2] $end
$var wire 1 * i_register_file [1] $end
$var wire 1 + i_register_file [0] $end
$var wire 1 N i_register_file_ce [2] $end
$var wire 1 O i_register_file_ce [1] $end
$var wire 1 P i_register_file_ce [0] $end
$var wire 1 Q i_register_file_mux_addr [1] $end
$var wire 1 R i_register_file_mux_addr [0] $end
$var reg 8 S o_alu [7:0] $end
$var reg 8 T o_acumulator [7:0] $end
$var reg 8 U o_register_file [7:0] $end
$var reg 1 V o_carry $end
$var reg 3 W current_operation [2:0] $end

$scope begin p_alu $end
$upscope $end

$scope begin p_acumulator $end
$upscope $end

$scope begin p_register_file_ce $end
$upscope $end

$scope begin p_register_file_mux_addr $end
$upscope $end
$upscope $end

$scope module data_memory_inst $end
$var wire 1 ! i_clk $end
$var wire 1 " i_rst $end
$var wire 1 X i_data_memory [7] $end
$var wire 1 Y i_data_memory [6] $end
$var wire 1 Z i_data_memory [5] $end
$var wire 1 [ i_data_memory [4] $end
$var wire 1 \ i_data_memory [3] $end
$var wire 1 ] i_data_memory [2] $end
$var wire 1 ^ i_data_memory [1] $end
$var wire 1 _ i_data_memory [0] $end
$var wire 1 ` i_data_memory_addr [9] $end
$var wire 1 a i_data_memory_addr [8] $end
$var wire 1 b i_data_memory_addr [7] $end
$var wire 1 c i_data_memory_addr [6] $end
$var wire 1 d i_data_memory_addr [5] $end
$var wire 1 e i_data_memory_addr [4] $end
$var wire 1 f i_data_memory_addr [3] $end
$var wire 1 g i_data_memory_addr [2] $end
$var wire 1 h i_data_memory_addr [1] $end
$var wire 1 i i_data_memory_addr [0] $end
$var wire 1 j i_write_enable $end
$var wire 1 k i_read_enable $end
$var reg 8 l o_data_memory [7:0] $end

$scope begin p_data_memory $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 ,
b111100 -
b0 .
b0 /
b0 0
b111 1
02
bx 3
b111 4
b0 5
b0 6
07
bx 8
x9
x:
b0 ;
b111100 <
b111 C
b0 D
b0 E
0F
bx G
xH
xI
b0 S
b0 T
b0 U
0V
b111 W
bx l
0+
0*
0)
0(
0'
0&
0%
0$
x#
1"
0!
xk
xj
xi
xh
xg
xf
xe
xd
xc
xb
xa
x`
0_
0^
0]
0\
0[
0Z
0Y
0X
0R
0Q
0P
0O
0N
1M
1L
1K
0J
0B
0A
1@
1?
1>
1=
$end
#50
1!
#100
0!
#130
1#
0"
1*
b10 U
b10 .
b10 S
b10 /
#150
1!
b1 ;
b1 ,
b11000 <
b11000 -
0@
0=
b110 C
b100 E
1F
17
b100 6
b110 4
b110 1
1J
1N
0M
b110 W
#200
0!
#250
1!
b10 T
b10 ;
b10 ,
b10 0
1^
b11101 <
b11101 -
1B
1@
b111 C
b101 E
b1 D
0F
b1 E
07
b1 5
b1 6
b111 4
b111 1
0J
1P
0N
1M
1R
b0 U
b111 W
b0 S
b0 /
b0 .
#300
0!
#350
1!
b11 ;
b11 ,
b10 U
b10 .
b10 S
b10 /
#400
0!
#450
1!
b100 ;
b100 ,
bx <
bx -
xB
xA
x@
x?
x>
x=
bx C
b1xx E
bx D
bx 5
b1xx 6
bx 4
bx 1
xP
xO
1N
xM
xL
xK
xR
xQ
b0 U
bx W
b0 S
b0 /
b0 .
#500
0!
#550
1!
b101 ;
b101 ,
#600
0!
#650
1!
b110 ;
b110 ,
#700
0!
#750
1!
b111 ;
b111 ,
#800
0!
#850
1!
b1000 ;
b1000 ,
#900
0!
#950
1!
b1001 ;
b1001 ,
#1000
0!
